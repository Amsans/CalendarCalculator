<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>